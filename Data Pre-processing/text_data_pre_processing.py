# -*- coding: utf-8 -*-
"""Text Data Pre-processing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y3CUXh0KnvCcOV6VkB2VosPcg7vPwV1o

Importing the dependencies
"""

import numpy as np
import pandas as pd
import re
import nltk
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split

nltk.download('stopwords')

# printing the stopwords
print(stopwords.words('english'))

"""Data Pre-Processing"""

# load the data to a pandas dataframe
news_dataset = pd.read_csv('/content/train.csv')

# first five rows in the dataset
news_dataset.head()

"""0 ---> Real News
1 ---> Fake News
"""

news_dataset.shape

# Checking for missing values
news_dataset.isnull().sum()

from hashlib import new
# replacing the missing values with null string
news_dataset = news_dataset.fillna('')

# merging the author name and news title
news_dataset['content'] = news_dataset['author']+' '+news_dataset['title']

news_dataset.head()

# Separating feature and target
X = news_dataset.drop(columns='label', axis=1)
Y = news_dataset['label']

print(X)

print(Y)

"""Streaming:

Streaming is the process of reducing a word to its keyword/ root word
example: enjoying,enjoyable .... root word is enjoy

"""

port_stem = PorterStemmer()

def stemming(content):
  stemmed_content = re.sub('[^a-zA-Z]',' ',content)
  stemmed_content = stemmed_content.lower() #convert into lower case
  stemmed_content = stemmed_content.split()
  stemmed_content = [port_stem.stem(word) for word in stemmed_content if not word in stopwords.words('english')]
  stemmed_content = ' '.join(stemmed_content)
  return stemmed_content

news_dataset['content'] = news_dataset['content'].apply(stemming)

print(news_dataset['content'])

X = news_dataset['content'].values
Y = news_dataset['label'].values

print(X)

print(Y)

Y.shape

# converting the textual data to feature vectors
vectorizer = TfidfVectorizer()
vectorizer.fit(X)
X = vectorizer.transform(X)

print(X)