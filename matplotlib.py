# -*- coding: utf-8 -*-
"""Matplotlib.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-GGrTxnu_uPvl97FjwhwfixXzWGIlmrE

Matplotlib is a popular Python library for creating static, animated, and interactive visualizations. It supports a wide range of 2D plots and offers extensive customization, making it ideal for data analysis and scientific graphing.Data scientists use the Matplotlib library to create static, interactive, and animated visualizations in Python for data analysis and presentation.
"""

# Importing matplotlib library
import matplotlib.pyplot as plt

# Importing numpy to get data for our plot
import numpy as np

x = np.linspace(0, 10, 100)
y = np.sin(x)
z = np.cos(x)

print(x)

print(y)

print(z)

"""Ploting the data"""

# sin wave
plt.plot(x,y)

# cosine wave
plt.plot(x,z)
plt.show()

# Adding title, x-axis & y-axis labels
plt.plot(x,y)
plt.title('Sine Wave')
plt.xlabel('angle')
plt.ylabel('Y-axis')
plt.show()

# Parabola
x = np.linspace(-10 , 10, 20)
y = x**2
plt.plot(x,y)
plt.show()

plt.plot(x, y, 'r+')
plt.show()

plt.plot(x, y, 'g.')
plt.show()

x = np.linspace(-5, 5, 50)
plt.plot(x, np.sin(x), 'g-')
plt.plot(x, np.cos(x), 'r--')
plt.show()

"""Bar plot"""

fig = plt.figure()
ax = fig.add_axes([0,0,1,1])
languages = ['English', 'French', 'Spanish', 'Latin', 'German']
people = [100, 50, 150, 40, 70]
ax.bar(languages, people)
plt.xlabel('LANGUAGES')
plt.ylabel('PEOPLE')
plt.show()

"""Pie Chart"""

fig1 = plt.figure()
ax = fig1.add_axes([0,0,1,1])
languages = ['English', 'French', 'Spanish', 'Latin', 'German']
people = [100, 50, 150, 40, 70]
ax.pie(people, labels= languages, autopct = '%1.1f%%')
plt.show()

"""Scatter Plot"""

x = np.linspace(0, 10, 30)
y = np.sin(x)
z = np.cos(x)
fig2 = plt.figure()
ax = fig2.add_axes([0,0,1,1])
ax.scatter(x, y, color = 'r')
ax.scatter(x, z, color = 'b')
plt.show()

"""3D Scatter Plot"""

fig3 = plt.figure()
ax = plt.axes(projection = '3d')
z = 20 * np.random.random(100)
x = np.sin(z)
y = np.cos(z)
ax.scatter(x, y, z, c=z, cmap = 'Greens')
plt.show()