# -*- coding: utf-8 -*-
"""Pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EtzMeqjguCwmwR0zZMJ7lzpTsMs-xDLx

Pandas is a powerful Python library used for data manipulation and analysis, offering easy-to-use data structures like Series (one-dimensional) and DataFrame (two-dimensional). It allows users to load data from various formats such as CSV and Excel, clean and filter data, perform statistical operations, and analyze datasets efficiently. Widely used in data science and machine learning, Pandas simplifies handling structured data and supports tasks like grouping, merging, and time series analysis.
"""

import pandas as pd

# Creating the boston house price data
from sklearn.datasets import fetch_california_housing
california_housing_dataset = fetch_california_housing()
type(california_housing_dataset)

print(california_housing_dataset)

# Convert into pandas dataframe
california_housing_df = pd.DataFrame(california_housing_dataset.data, columns=california_housing_dataset.feature_names)
california_housing_df.head()

california_housing_df.shape

type(california_housing_df)

# Importing the data from a CSV file to a pandas DataFrame
diabetes_df = pd.read_csv('/content/diabetes.csv')

type(diabetes_df)

diabetes_df.head()

# Exporting dataFrame to a csv file
california_housing_df.to_csv('california.csv')

"""Exporting dataFrame to a excel file
df.to_excel('filename')
"""

# Creating dataframe with random values

import numpy as np
random_df = pd.DataFrame(np.random.rand(20,10))
random_df.head()

random_df.shape
type(random_df)

# Inspecting a DataFrame
#print last five rows in a DataFrame
california_housing_df.tail()

california_housing_df.info()

# Finding the number of missing values in each coloumn
california_housing_df.isnull().sum()

# diabetes dataframe
diabetes_df.head()

# Counting the values based on labels
diabetes_df.value_counts('Outcome')

# Group the values based on the mean
diabetes_df.groupby('Outcome').mean()

"""# Statistical Measures"""

# Count or numbers of values

california_housing_df.count()

# Mean value - column wise
california_housing_df.mean()

# Standard deviation - column wise

california_housing_df.std()

# Minimum value in each column

california_housing_df.min()

# Maximum value for each column
california_housing_df.max()

# all the statistical measures about the dataframe
california_housing_df.describe()

"""# Manipulating a dataframe"""

# Adding column to a dataframe
california_housing_df['Price'] = california_housing_dataset.target

california_housing_df.head()

# Removing a row from dataframe
california_housing_df.drop(index=0, axis=0)

# Remove a column
california_housing_df.drop(columns='Price', axis=1)

# Locating a row using index value
california_housing_df.iloc[2]

# Locating a particular column
print(california_housing_df.iloc[:,0]) # first column
print(california_housing_df.iloc[:,-1]) # last column

"""# Correlation
1. Positive correlation
2. Negative correlation
"""

california_housing_df.corr()